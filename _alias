#!/bin/bash

# Maven
which mvn > /dev/null
if [[ 0 -eq $? ]]; then
    alias mcist='mvn clean install -DskipTests'
    alias mci='mvn clean install'
    alias m='mvn'
fi

# Git
which git > /dev/null
if [[ 0 -eq $? ]]; then
    # taken as-is form zsh/oh-my-zsh configuration to make it work with bash too
    _current_branch () {
        ref=$(git symbolic-ref HEAD 2> /dev/null)  || return
        echo ${ref#refs/heads/}
    }

    alias gl='git log --decorate --oneline --graph --all -20'
    alias gls='git ls-files --exclude-standard'
    alias gh='git help'
    alias gpr='git pull --rebase'
    alias gp='git pull'
    alias gpu='git push'
    alias gf='git fetch'
    alias gst='git status -s'
    alias ga='git add'
    alias gap='git add -vp'
    alias gr='git reset'
    alias gds='git diff --staged'
    alias gd='git diff'
    alias gc='git commit'
    alias ggpull='git fetch origin && git pull --rebase origin $(_current_branch)'
    alias ggpush='git push origin $(_current_branch)'
fi

# Virtualbox
which vboxmanage > /dev/null
if [[ 0 -eq $? ]]; then
    #TODO : add zsh autocompletion support

    _waitCommandEnd() {
       vboxmanage  showvminfo  "$1" >/dev/null
    }

    _powerOff(){
       vboxmanage controlvm "$1" poweroff
       waitCommandEnd "$1"
    }

    _restoreCurrent(){
       vboxmanage snapshot "$1" restorecurrent
       waitCommandEnd "$1"
    }

    _startVm(){
       vboxmanage startvm "$1"
       waitCommandEnd "$1"
    }

    vbox(){
        cmd="${1:-usage}"
        vmId="$2"
        targetFile="$3"

        case "$cmd" in
           "usage" )
              echo "usage :"
              echo "  vbox usage : display this help"
              echo "  vbox list : list VMs (and get their ID)"
              echo "  vbox playagain <id> : power off, restore snapshot and start vm"
              echo "  vbox start <id> : start vm"
              echo "  vbox stop <id> : stop vm (power off)"
              echo "  vbox export <id> [target] : export vm, defaults to box.ovf"
              return 1
              ;;
           "list" )
              vboxmanage list vms | sed 's/ {/ |{/' | column -t -s \|
              ;;
           "start" )
              _startVm "$vmId" 
              ;;
           "playagain" )
              _powerOff "$vmId"
              _restoreCurrent "$vmId"
              _startVm "$vmId"
              ;;
           "stop" )
              _powerOff "$vmId"
              ;;
           "export" )
              vboxmanage export "$vimId" --output "${targetFile:-box.ovf}"
              ;;
        esac
        return $?
    }

fi
