
This file contains all things i've learned and those that I still need to

=== TODOs ===

TODO : disable search on F1, but put ":help " in command buffer to search for a subject

TODO : remap Ctrl+V Ctrl+C Ctrl+X Ctrl+Z to their original mapping (see mswin.vim )
TODO : macro recording and usage ??? 

TODO : remap Ctrl+V Ctrl+C Ctrl+X Ctrl+Z to their original mapping (see mswin.vim )

TODO : search how to use buffers batch operations (bufdo)
TODO : display marks in buffers 
    -> sounds like it is not possible (according to help)

TODO : find how to manipulate xml tags
    -> nothing more than cit, cat, dit, dat, ... => find a plugin for xml

TODO search highlight
    'hl' variable defines all search highlight types
    :nohlsearch disables current highlight

=== Motion ===

hjkl
{,}: previous/next paragraph

move in current line : 
g^ or ^ : first non blank character
g_ : last non bkank character

=== Buffers ===

=== Windows ===

Ctrl+w + <x> where <x> is :
o : only current window
s : split horizontally
s : split horizontally
h,j,k,l : move cursor to window
Ctrl+w : switch to next window

=== Folds ===

zf + motion to fold manually an item
{Visual}zf to fold selection
zo to delete current fold

=== Macros ===

q[register] : records typed characters to register (q by default)
@[register] : execute content of register
@@ : re-execute last macro

 " TODO : try to find an example of macro execution combined with g command

  " g command
  " file type ( auto detect and set manually)

  " TODO messages encoding 

  " TODO display line numbers
  " -> TODO customize status line to include current cursor position
  " laststatus controls when a status line is displayed
  " see statusline option

  " TODO : fullscreen display

=== help ===

:helpg {pattern} : help grep
    -> then navigate results using quickfix window through :cwindow and :cnext

=== command line mode ===

" <Up> search cmd history with current cmd as prefix

" Ctrl+R : insert value of a register into command line
" named registers (not exhaustive)
"  %  current file name
"  *  clipboard content
"  /  last search pattern
"  :  last command line

" auto-completion
" Ctrl+D : list names that match the pattern in front of the cursor

" jumps
" '' : return to previous position after a jump (like a search, go to start/end of file, ...)
